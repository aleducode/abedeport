╔═══════════════════════════════════════════════════════════════╗
║  QUICK PRODUCTION UPDATE - Apply likes_comments.sql          ║
╚═══════════════════════════════════════════════════════════════╝

METHOD 1: AUTOMATED SCRIPT (EASIEST) ⭐
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
On your production server:

$ cd /path/to/abedeport
$ ./apply-likes-to-prod.sh

Follow the prompts. Done! ✅


METHOD 2: MANUAL COMMANDS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. SSH to production server
2. Run these commands:

# Create backup
$ docker exec abedeport-db mysqldump -u root -pROOT_PASSWORD ABEDEPORT > backup.sql

# Apply SQL
$ docker exec -i abedeport-db mysql -u root -pROOT_PASSWORD ABEDEPORT < database/likes_comments.sql

# Verify
$ docker exec abedeport-db mysql -u root -pROOT_PASSWORD -e "USE ABEDEPORT; SHOW TABLES;"

Done! ✅


METHOD 3: PHPMYADMIN (NO TERMINAL)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
1. Go to phpMyAdmin in browser
2. Select ABEDEPORT database
3. Click "Export" tab → Download backup
4. Click "Import" tab → Choose "likes_comments.sql"
5. Click "Go"

Done! ✅


VERIFICATION (Optional)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
$ docker exec abedeport-db mysql -u root -pROOT_PASSWORD -e "
  USE ABEDEPORT;
  SELECT COUNT(*) FROM post_likes;
  SELECT COUNT(*) FROM post_comments;
"

Should show: 6 likes, 5 comments


ROLLBACK (If needed)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
$ docker exec -i abedeport-db mysql -u root -pROOT_PASSWORD ABEDEPORT < backup.sql


NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
✓ Safe to run multiple times
✓ Takes < 5 seconds
✓ No downtime needed
✓ Creates: post_likes, post_comments tables
✓ Adds: like_count, comment_count to blog_posts

Replace ROOT_PASSWORD with your actual MySQL root password
